apiVersion: apps/v1
kind: Deployment
metadata:
  name: temporal-worker
  namespace: shadow-platform
  labels:
    app: temporal-worker
    component: worker
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: temporal-worker
  template:
    metadata:
      labels:
        app: temporal-worker
        component: worker
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: temporal-worker
      containers:
      - name: worker
        image: shadow-platform/temporal-worker:latest
        imagePullPolicy: Always
        ports:
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: TEMPORAL_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: temporal-config
              key: temporal.address
        - name: TEMPORAL_NAMESPACE
          valueFrom:
            configMapKeyRef:
              name: temporal-config
              key: temporal.namespace
        - name: TEMPORAL_TASK_QUEUE
          valueFrom:
            configMapKeyRef:
              name: temporal-config
              key: temporal.taskQueue
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: temporal-secrets
              key: database.url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: temporal-secrets
              key: redis.url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: temporal-secrets
              key: jwt.secret
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: temporal-secrets
              key: encryption.key
        - name: WORKER_CONCURRENCY
          value: "100"
        - name: MAX_CACHED_WORKFLOWS
          value: "1000"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 9090
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: temporal-worker-config
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - temporal-worker
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: temporal-worker-metrics
  namespace: shadow-platform
  labels:
    app: temporal-worker
    component: metrics
spec:
  type: ClusterIP
  ports:
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
  selector:
    app: temporal-worker

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: temporal-worker
  namespace: shadow-platform

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: temporal-worker
  namespace: shadow-platform
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: temporal-worker
  namespace: shadow-platform
subjects:
- kind: ServiceAccount
  name: temporal-worker
  namespace: shadow-platform
roleRef:
  kind: Role
  name: temporal-worker
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: temporal-worker-hpa
  namespace: shadow-platform
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: temporal-worker
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: temporal-worker-pdb
  namespace: shadow-platform
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: temporal-worker